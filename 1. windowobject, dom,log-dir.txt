1. 윈도우 객체
윈도우 객체 안에 있는 프로퍼티 -> 정보/제어
window.__ 
최상단에 있는 객체(그 밑에 내장 객체, 내장 함수 등등)
자바스크립트 어느 곳에서나 접근 가능 = 전역객체(global object)
window.console.log() -> console.log (생략가능)

2. DOM(document object model) 문서객체모델
웹 페이지에 나타나는 html 문서 전체를 객체로 표현한 것
dom을 활용하면 html 태그를 객체처럼 자유롭게 다룰 수 있다
2-1. dom은 html이 아니다
dom은 유효한 html 문서의 인터페이스
DOM은 HTML 문서의 내용을 볼 수 있는 인터페이스 역할을 하는 동시에 동적 자원이 되어 수정될 수 있다(자바스크립트를 사용해 DOM에 새로운 노드를 추가할 수 있다.)
DOM은 브라우저에서 보이는 것이 아니다. 브라우저 뷰 포트에 보이는 것은 렌더 트리(오직 스크린에 그려지는 것으로 구성됨)로 dom과 cssom의 조합,, <p> 태그와 같이 dom요소에는 포함되지만 랜더트리에는 포함되지 않음

2-2. 요약
DOM은 HTML 문서에 대한 인터페이스입니다. 첫째로 뷰 포트에 무엇을 렌더링 할지 결정하기 위해 사용되며,
둘째로는 페이지의 콘텐츠 및 구조, 그리고 스타일이 자바스크립트 프로그램에 의해 수정되기 위해 사용됩니다.
2-2-1. "DOM은 원본 HTML 문서 형태와 비슷하지만 몇 가지 차이점이 있습니다".
항상 유효한 HTML 형식입니다.  // 오류난 html은 포함 x
자바스크립트에 수정될 수 있는 동적 모델이어야 합니다.
가상 요소를 포함하지 않습니다. (Ex. ::after)
보이지 않는 요소를 포함합니다. (Ex. display: none)

html 
    head
    body
        h1
            hello world!
        p                           //  <-- html에는 포함되지 않지만 dom에는 포함되는 것
            how are you

3. console.log() 와  console.dir() 의 차이
둘 다 파라미터(매개변수)로 전달 받은 값을 콘솔로 출력하는 역할을 한다.
3.1 출력하는 자료형이 다르다.
dir 메소드는 문자열 표시 형식으로 콘솔에 출력합니다.
값에 좀 더 중점을 둔 log 메소드는 대상을 HTML 형태로 출력하고, 객체의 속성에 좀 더 중점을 둔 dir 메소드는 대상을 객체 형태로 출력합니다.
콘솔에서 값 자체를 확인하고 싶다면 log메소드를, 객체의 속성들을 살펴보고 싶다면 dir 메소드를 활용하면 좋을 것 같습니다.